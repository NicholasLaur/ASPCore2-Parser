package parser;

import parser.Parser;
import parser.ParserVisitor;
import parser.SimpleNode;

/* Generated By:JJTree: Do not edit this line. ASPCore2Atom.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=ASPCore2,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASPCore2Atom extends SimpleNode {
    public ASPCore2Atom(int id) {
        super(id);
    }

    int childrenTerm = 0;

    public ASPCore2Atom(Parser p, int id) {
        super(p, id);
    }


    /**
     * Accept the visitor.
     **/
    public Object jjtAccept(ParserVisitor visitor, Object data) {
        ((MyParserVisitor) visitor).addAtom(this);
        calculatechildrenTerm(visitor);
        return visitor.visit(this, data);
    }

    private void calculatechildrenTerm(ParserVisitor visitor) {
        if (children != null) {
            for (int i = 0; i < children.length; ++i) {
                if (children[i] instanceof ASPCore2Terms)
                    ((ASPCore2Terms)children[i]).jjtAcceptTerm(visitor, this);
            }
            //System.out.println(childrenTerm);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof ASPCore2Atom) {
            String predicate_name = ((ASPCore2Predicate_name) this.children[0]).value.toString();
            String predicate_nameObj = ((ASPCore2Predicate_name) ((ASPCore2Atom) obj).children[0]).value.toString();
           // System.out.println(predicate_name + " " + predicate_nameObj + " " + this.childrenTerm + " " + ((ASPCore2Atom) obj).childrenTerm);
            return predicate_name.equals(predicate_nameObj) && this.childrenTerm == ((ASPCore2Atom) obj).childrenTerm;
        }
        return false;
    }
}
/* JavaCC - OriginalChecksum=7c3a5fde4e77db4825465cca2e884ccc (do not edit this line) */
